dt[, prob := exp(-85 + 0.5*height)/(1+exp(-85 + 0.5*height))]
dt[, log_odd := log(prob/(1-prob))]
c <- ggplot(dt, aes(height, log_odd, color = gender_bin)) +
geom_function(fun = function(x) -85 + 0.5*x) + geom_point() +
theme(legend.position = "none")
d <- ggplot(dt, aes(height, prob, color = gender_bin)) +
geom_function(fun = function(x) exp(-85 + 0.5*x)/(1 + exp(-85 + 0.5*x))) +
geom_point() + theme(legend.position = "none")
cowplot::plot_grid(c, d)
dt[, l := prob^gender*(1 - prob)^(1 - gender)]
dt[, ll := gender*log(prob) + (1 - gender)*log(1 - prob)]
likelihood <- prod(dt$l)
log_likelihood <- sum(dt$ll)
log_likelihood
dt2 <- dt[, .(height)]
dt2[, jt := 1]
dt2 <- as.matrix(dt2)
alpha <- 0.2
beta <-  matrix(c(0, 0), nrow = 1)
beta <- c(0,0)
dt3 <- cbind(c(1, 1, 1, 1), c(1, 2, 2.5, 4), c(0, 0, 1, 1))
dt4 <- data.table(height = c(1, 2, 2.5, 4), gender = c(0, 0, 1, 1))
probability <- function(dt2, gender, beta) {
temp <- (1/(1 + exp(-1*(beta %*% t(dt2)))) - gender) %*% dt2
return(temp)
}
for (n in 1:1000) {
beta <- beta + alpha*probability(dt3[, 1:2], dt3[, 3], beta)
}
beta
ols <- glm(gender ~ height, data = dt4, family=binomial (link=logit))
ab <- glm(gender ~ height, data=dt, family=binomial (link=logit))
summary(ab)
ggplot(dt, aes(height, gender, color = gender_bin)) +
geom_point() + geom_function(fun = function(x) exp(ab$coefficients[1] +
ab$coefficients[2]*x)/(1 + exp(ab$coefficients[1] + ab$coefficients[2]*x))) +
theme(legend.position = "none")
dt[, prob_opt := exp(ab$coefficients[1] +
ab$coefficients[2]*height)/(1+exp(ab$coefficients[1] +
ab$coefficients[2]*height))]
dt[, ll_opt := gender*log(prob_opt) + (1 - gender)*log(1 - prob_opt)]
log_likelihood_opt <- sum(dt$ll_opt)
dt2 <- dt[, .(height)]
dt2[, jt := 1]
dt2 <- as.matrix(dt2)
alpha <- 0.2
beta <-  matrix(c(0, 0), nrow = 1)
beta <- c(0,0)
dt3 <- cbind(c(1, 1, 1, 1), c(1, 2, 2.5, 4), c(0, 0, 1, 1))
dt4 <- data.table(height = c(1, 2, 2.5, 4), gender = c(0, 0, 1, 1))
probability <- function(dt2, gender, beta) {
temp <- (1/(1 + exp(-(beta %*% t(dt2)))) - gender) %*% dt2
return(temp)
}
for (n in 1:1000) {
beta <- beta + alpha*probability(dt3[, 1:2], dt3[, 3], beta)
}
beta
ols <- glm(gender ~ height, data = dt4, family=binomial (link=logit))
dt2 <- dt[, .(height)]
dt2[, jt := 1]
dt2 <- as.matrix(dt2)
alpha <- 0.2
beta <-  matrix(c(0, 0), nrow = 1)
beta <- c(0,0)
dt3 <- cbind(c(1, 1, 1, 1), c(1, 2, 2.5, 4), c(0, 0, 1, 1))
dt4 <- data.table(height = c(1, 2, 2.5, 4), gender = c(0, 0, 1, 1))
probability <- function(dt2, gender, beta) {
temp <- (1/(1 + exp(-(beta %*% t(dt2)))) - gender) %*% dt2
return(temp)
}
for (n in 1:1000) {
beta <- beta + alpha*probability(dt3[, 1:2], dt3[, 3], beta)
}
beta
ols <- glm(gender ~ height, data = dt4, family=binomial (link=logit))
dt2 <- dt[, .(height)]
dt2[, jt := 1]
dt2 <- as.matrix(dt2)
alpha <- 0.2
beta <-  matrix(c(0, 0), nrow = 1)
beta <- c(0,0)
dt3 <- cbind(c(1, 1, 1, 1), c(1, 2, 2.5, 4), c(0, 0, 1, 1))
dt4 <- data.table(height = c(1, 2, 2.5, 4), gender = c(0, 0, 1, 1))
probability <- function(dt2, gender, beta) {
temp <- (1/(1 + exp(-(beta %*% t(dt2)))) - gender) %*% dt2
return(temp)
}
for (n in 1:1000) {
beta_1 <- beta
beta <- beta_1 + alpha*probability(dt3[, 1:2], dt3[, 3], beta_1)
}
beta
ols <- glm(gender ~ height, data = dt4, family=binomial (link=logit))
probability <- function(dt2, gender, beta) {
temp <- t(dt2) %*% (1/(1 + exp(-(beta %*% t(dt2)))) - gender)
return(temp)
}
for (n in 1:1000) {
beta_1 <- beta
beta <- beta_1 + alpha*probability(dt3[, 1:2], dt3[, 3], beta_1)
}
temp <- dt) %*% (1/(1 + exp(-(beta %*% t(dt2)))) - gender)
probability <- function(dt2, gender, beta) {
temp <- dt %*% (1/(1 + exp(-(beta %*% t(dt2)))) - gender)
return(temp)
}
for (n in 1:1000) {
beta_1 <- beta
beta <- beta_1 + alpha*probability(dt3[, 1:2], dt3[, 3], beta_1)
}
temp <- dt2 %*% (1/(1 + exp(-(beta %*% t(dt2)))) - gender)
probability <- function(dt2, gender, beta) {
temp <- dt2 %*% (1/(1 + exp(-(beta %*% t(dt2)))) - gender)
return(temp)
}
for (n in 1:1000) {
beta_1 <- beta
beta <- beta_1 + alpha*probability(dt3[, 1:2], dt3[, 3], beta_1)
}
library(ISLR)
install.packages("ISLR")
library(ISLR)
data(Smarket)
X <- as.matrix(Smarket[, 2:7])
X <- cbind(rep(1, 1250), X)
Y <- as.numeric(Smarket[, 9])
Y[Y==1] <- 0
Y[Y==2] <- 1
sigmoid <- function(z) 1/(1+exp(-z))
w0 <- runif(7)
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
while (sum(w1==w0) != 7) {
w0 <- w1
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
}
c(w1)
View(X)
X <- as.matrix(Smarket[, 2:7])
View(X)
X <- cbind(rep(1, 1250), X)
Y <- as.numeric(Smarket[, 9])
Y[Y==1] <- 0
Y[Y==2] <- 1
sigmoid <- function(z) 1/(1+exp(-z))
w0 <- runif(7)
X <- as.matrix(dt2[, height])
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
View(X)
Y <- as.numeric(dt[, gender])
library(ISLR)
data(Smarket)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(z) 1/(1+exp(-z))
w0 <- runif(2)
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
while (sum(w1==w0) != 7) {
w0 <- w1
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
}
library(ISLR)
data(Smarket)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(z) 1/(1+exp(-z))
w0 <- runif(2)
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
for (x in 1:1000) {
w0 <- w1
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
}
c(w1)
library(ISLR)
data(Smarket)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(z) 1/(1+exp(-z))
w0 <- runif(2)
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
for (x in 1:10000) {
w0 <- w1
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
}
c(w1)
library(ISLR)
data(Smarket)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(z) 1/(1+exp(-z))
w0 <- runif(2)
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
for (x in 1:100000) {
w0 <- w1
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
}
c(w1)
ab <- glm(gender ~ height, data=dt, family=binomial (link=logit))
summary(ab)
ggplot(dt, aes(height, gender, color = gender_bin)) +
geom_point() + geom_function(fun = function(x) exp(ab$coefficients[1] +
ab$coefficients[2]*x)/(1 + exp(ab$coefficients[1] + ab$coefficients[2]*x))) +
theme(legend.position = "none")
dt[, prob_opt := exp(ab$coefficients[1] +
ab$coefficients[2]*height)/(1+exp(ab$coefficients[1] +
ab$coefficients[2]*height))]
dt[, ll_opt := gender*log(prob_opt) + (1 - gender)*log(1 - prob_opt)]
log_likelihood_opt <- sum(dt$ll_opt)
View(ab)
library(ISLR)
data(Smarket)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(z) 1/(1+exp(-z))
w0 <- runif(2)
w1 <- w0 - 0.1 * t(X) %*% (sigmoid(X %*% w0) - Y)
for (x in 1:10000) {
w0 <- w1
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
}
c(w1)
library(ISLR)
data(Smarket)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(z) 1/(1+exp(-z))
w0 <- runif(2)
w1 <- w0 - 0.1 * t(X) %*% (sigmoid(X %*% w0) - Y)
for (x in 1:100000) {
w0 <- w1
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
}
c(w1)
library(ISLR)
data(Smarket)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(z) 1/(1+exp(-z))
w0 <- runif(2)
w1 <- w0 - 0.1 * t(X) %*% (sigmoid(X %*% w0) - Y)
for (x in 1:100000) {
w0 <- w1
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
}
c(w1)
library(ISLR)
data(Smarket)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(z) 1/(1+exp(-z))
w0 <- runif(2)
w1 <- w0 - 0.1 * t(X) %*% (sigmoid(X %*% w0) - Y)
for (x in 1:1000000) {
w0 <- w1
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
}
c(w1)
View(ab)
library(ISLR)
data(Smarket)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(z) 1/(1+exp(-z))
w0 <- runif(2)
w1 <- w0 - 2 * t(X) %*% (sigmoid(X %*% w0) - Y)
for (x in 1:1000000) {
w0 <- w1
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
}
c(w1)
library(ISLR)
data(Smarket)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(z) 1/(1+exp(-z))
w0 <- runif(2)
w1 <- w0 -  t(X) %*% (sigmoid(X %*% w0) - Y)
for (x in 1:1000000) {
w0 <- w1
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
}
c(w1)
library(ISLR)
data(Smarket)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(z) 1/(1+exp(-z))
w0 <- runif(2)
w1 <- w0 -  t(X) %*% (sigmoid(X %*% w0) - Y)
for (x in 1:10000000) {
w0 <- w1
w1 <- w0 - 0.001 * t(X) %*% (sigmoid(X %*% w0) - Y)
}
c(w1)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(X, Y, beta) {
return (Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))) - 1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% X
}
beta <- runif(2)
for (x in 1:10000000) {
beta_1 <- beta
beta <- beta_1 - 0.1 * sigmoid(X, Y, beta_1)
}
sigmoid <- function(X, Y, beta) {
return (Y*(1-(exp(t(X) %*% beta)/(1+expt(X) %*% beta))) - 1-(exp(t(X) %*% beta)/(1+expt(X) %*% beta)))))) %*% X
return (Y*(1-(exp(t(X) %*% beta)/(1+expt(X) %*% beta))) - 1-(exp(t(X) %*% beta)/(1+expt(X) %*% beta)))))))) %*% X
sigmoid <- function(X, Y, beta) {
return (Y*(1-(exp(t(X) %*% beta)/(1+expt(X) %*% beta))) - 1-(exp(t(X) %*% beta)/(1+expt(X) %*% beta))) %*% X
}
beta <- runif(2)
for (x in 1:10000000) {
beta_1 <- beta
beta <- beta_1 - 0.1 * sigmoid(X, Y, beta_1)
}
exp(X %*% t(beta)
}
sigmoid <- function(X, Y, beta) {
return (Y*(1-(exp(X %*% t(beta))/(1+expt(X %*% t(beta))))) - 1-(exp(X %*% t(beta))/(1+exp(X %*% t(beta))))) %*% X
}
beta <- runif(2)
for (x in 1:10000000) {
beta_1 <- beta
beta <- beta_1 - 0.1 * sigmoid(X, Y, beta_1)
}
X %*% t(beta)
t(X) %*% beta
return (Y*(1-(exp(t(beta) %*% X)/(1+expt(X %*% t(beta))))) - 1-(exp(X %*% t(beta))/(1+exp(X %*% t(beta))))) %*% X
(t(beta) %*% X
(t(beta) %*% X
t(beta) %*% X
t(beta) %*% X
t(beta) %*% X
beta %*% t(X)
sigmoid <- function(X, Y, beta) {
return (Y*(1-(exp(beta %*% t(X))/(1+expt(beta %*% t(X))))) - 1-(exp(beta %*% t(X))/(1+expbeta %*% t(X)))) %*% X
}
beta <- runif(2)
for (x in 1:10000000) {
beta_1 <- beta
beta <- beta_1 - 0.1 * sigmoid(X, Y, beta_1)
}
sigmoid <- function(X, Y, beta) {
return (Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - 1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) %*% X
}
beta <- runif(2)
for (x in 1:10000000) {
beta_1 <- beta
beta <- beta_1 - 0.1 * sigmoid(X, Y, beta_1)
}
beta %*% t(X)
beta %*% t(X)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(X, Y, beta) {
return (Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - 1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) %*% X
}
beta <- runif(2)
for (x in 1:10000000) {
beta_1 <- beta
beta <- beta_1 - 0.1 * sigmoid(X, Y, beta_1)
}
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(X, Y, beta) {
return (Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% X
}
beta <- runif(2)
for (x in 1:10000000) {
beta_1 <- beta
beta <- beta_1 - 0.1 * sigmoid(X, Y, beta_1)
}
beta %*% X
beta %*% X
X %*% beta
View(beta)
View(beta)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
sigmoid <- function(X, Y, beta) {
return (Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% t(X)
}
beta <- runif(2)
for (x in 1:10000000) {
beta_1 <- beta
beta <- beta_1 - 0.1 * sigmoid(X, Y, beta_1)
}
beta <- runif(2)
beta %*% t(X)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
beta <- runif(2)
sigmoid <- function(X, Y, beta) {
return (Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% t(X)
}
for (x in 1:10000000) {
beta_1 <- beta
beta <- beta_1 - 0.1 * sigmoid(X, Y, beta_1)
}
sigmoid <- function(X, Y, beta) {
browser()
temp <- exp(beta %*% t(X))/(1+exp(beta %*% t(X)))
return (Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% t(X)
}
for (x in 1:10000000) {
beta_1 <- beta
beta <- beta_1 - 0.1 * sigmoid(X, Y, beta_1)
}
beta <- runif(2)
sigmoid <- function(X, Y, beta) {
browser()
temp <- exp(beta %*% t(X))/(1+exp(beta %*% t(X)))
return (Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% t(X)
}
for (x in 1:10000000) {
beta_1 <- beta
beta <- beta_1 - 0.1 * sigmoid(X, Y, beta_1)
}
View(temp)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
beta <- runif(2)
sigmoid <- function(X, Y, beta) {
browser()
temp <- exp(beta %*% t(X))/(1+exp(beta %*% t(X))) %*% t(X)
return (Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% t(X)
}
for (x in 1:10000000) {
beta_1 <- beta
beta <- beta_1 - 0.1 * sigmoid(X, Y, beta_1)
}
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
beta <- runif(2)
sigmoid <- function(X, Y, beta) {
browser()
temp <- exp(beta %*% t(X))/(1+exp(beta %*% t(X))) %*% X
return (Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% t(X)
}
for (x in 1:10000000) {
beta_1 <- beta
beta <- beta_1 - 0.1 * sigmoid(X, Y, beta_1)
}
exp(beta %*% t(X))/(1+exp(beta %*% t(X)))
temp <- exp(beta %*% t(X))/(1+exp(beta %*% t(X))) %*% X
X
temp <- X %*% exp(beta %*% t(X))/(1+exp(beta %*% t(X)))
temp <- X %*% t(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))
t(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))
temp <- t(X) %*% t(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))
exp(beta %*% t(X))/(1+exp(beta %*% t(X)))
temp <-  exp(beta %*% t(X))/(1+exp(beta %*% t(X))) %*% t(X)
exp(beta %*% t(X))/(1+exp(beta %*% t(X)))
t(X)
temp <- exp(beta %*% t(X))/(1+exp(beta %*% t(X))) %*% X
X
exp(beta %*% t(X))/(1+exp(beta %*% t(X)))
temp <- exp(beta %*% t(X))/(1+exp(beta %*% t(X))) %*% X
X
exp(beta %*% t(X))/(1+exp(beta %*% t(X)))
temp <- exp(beta %*% t(X))/(1+exp(beta %*% t(X))) %*% X
temp <- as.matrix(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))) %*% X
sigmoid <- function(X, Y, beta) {
return as.matrix((Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))))) %*% t(X)
sigmoid <- function(X, Y, beta) {
return as.matrix(Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% t(X)
sigmoid <- function(X, Y, beta) {
return as.matrix(Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% t(X)
sigmoid <- function(X, Y, beta) {
temp <- as.matrix(Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% t(X)
return temp
temp <- as.matrix(Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% t(X)
X <- as.matrix(dt[, height])
X <- cbind(rep(1, length(X)), X)
Y <- as.numeric(dt[, gender])
beta <- runif(2)
sigmoid <- function(X, Y, beta) {
temp <- as.matrix(Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% t(X)
return temp
as.matrix(Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))))
as.matrix(Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% t(X)
as.matrix(Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% X
sigmoid <- function(X, Y, beta) {
temp <- as.matrix(Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) - (1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% X
return temp
sigmoid <- function(X, Y, beta) {
temp <- as.matrix(Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) -
(1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% X
return temp
sigmoid <- function(X, Y, beta) {
temp <- as.matrix(Y*(1-(exp(beta %*% t(X))/(1+exp(beta %*% t(X))))) -
(1 -(exp(beta %*% t(X))/(1+exp(beta %*% t(X)))))) %*% X
return temp
